# MIT License

# Copyright (c) 2023 Replicable-MARL

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# IQL parameters

algo_args:
  batch_episode: 10 #Original is 2
  lr: 0.0005 #Original is 0.0005
  rollout_fragment_length: 5000 #Original is 1 # Set to 5000 to make it consistent with IPPO/ITRPO/IA2C
  #So training performed after 5000 steps which is 500 steps per episodes * 10 batched episodes
  buffer_size: 5000 #Original is 10 #Buffer size of 5000 to collect 5000 experiences NB Watch out for memory footprint!
  target_network_update_freq: 5000 #Original is 100 #Raised to 5000 to make it consistent with IPPO/ITRPO/IA2C
  final_epsilon: 0.01 #Original is 0.05 -> used for epsilon-greedy choice of action during learning: ex. with 0.1 10% of picking random action, 90% of picking current best action
  #The final epsilon is the minimum epsilon value that can be reached using decay -> this case 0.01
  epsilon_timesteps: 50000 #Original is 50000 -> decay rate of epsilon parameter: after how many steps lower epsilon
  optimizer: "adam" # "adam" #Original is "rmsprop"
  reward_standardize: False # Original is True